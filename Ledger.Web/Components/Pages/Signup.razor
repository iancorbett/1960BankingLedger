@page "/Pages/Signup"
@attribute [AllowAnonymous]
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager Nav

<h3>Create your account</h3>

<EditForm Model="_model" OnValidSubmit="HandleSignup">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="_model.Email" />
    </div>

    <div class="mb-3">
        <label>Password</label>
        <InputText class="form-control" type="password" @bind-Value="_model.Password" />
    </div>

    <div class="mb-3">
        <label>Confirm Password</label>
        <InputText class="form-control" type="password" @bind-Value="_model.ConfirmPassword" />
    </div>

    <button class="btn btn-primary" type="submit" disabled="@_busy">Sign Up</button>
    <a class="btn btn-link" href="/Pages/Login">Have an account? Log in</a>

    @if (!string.IsNullOrWhiteSpace(_error))
    {
        <div class="text-danger mt-2">@_error</div>
    }
</EditForm>

@code {
    private SignupModel _model = new();
    private string? _error;
    private bool _busy;

    private async Task HandleSignup()
    {
        _busy = true; _error = null;

        var user = new ApplicationUser { UserName = _model.Email, Email = _model.Email };
        var result = await UserManager.CreateAsync(user, _model.Password);

        if (!result.Succeeded)
        {
            _error = string.Join(" ", result.Errors.Select(e => e.Description));
            _busy = false;
            return;
        }

        await SignInManager.SignInAsync(user, isPersistent: true);
        Nav.NavigateTo("/", forceLoad: true); // ensure cookie binds to circuit
    }

    public class SignupModel
    {
        [Required, EmailAddress] public string Email { get; set; } = "";
        [Required, MinLength(6)] public string Password { get; set; } = "";
        [Required, Compare(nameof(Password), ErrorMessage = "Passwords must match")]
        public string ConfirmPassword { get; set; } = "";
    }
}
